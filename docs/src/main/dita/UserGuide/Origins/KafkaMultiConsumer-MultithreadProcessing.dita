<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ifs_wtm_3z">
 <title>Multithreaded Processing</title>
 <conbody>
  <p><indexterm>Kafka Multitopic Consumer origin<indexterm>multithreaded
                processing</indexterm></indexterm><indexterm>Number of Threads<indexterm>Kafka
                    Multitopic Consumer origin</indexterm></indexterm>The Kafka Multitopic Consumer
            origin performs parallel processing and enables the creation of a multithreaded
            pipeline. The Kafka Multitopic Consumer origin uses multiple concurrent threads based on
            the Number of Threads property and the partition assignment strategy defined in the
            Kafka cluster. </p>
        <p>
            <note type="important">In Kafka, make sure that the partition assignment strategy is set
                to the strategy you want to use. For example, in Kafka 0.10.1, you can set
                partition.assignment.strategy property to range or roundrobin. For more information
                about the strategies, see <xref href="https://kafka.apache.org/documentation/"
                    format="html" scope="external">the Kafka documentation</xref>.</note>
        </p>
        <p>When performing multithreaded processing, the Kafka Multitopic Consumer origin checks the
            list of topics to process and creates the specified number of threads. Each thread
            connects to Kafka and creates a batch of data from a partition assigned by the broker
            based on the Kafka partition assignment strategy. Then, it passes the batch to an
            available pipeline runner. </p>
        <p><ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-MultiThread-PipeRunnerDef"/>
            <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-MultiThread-def2"
            /></p>
        <p><ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-MultiThread-batchorder"
            /></p>
        <p>For example, say you set the Number of Threads property to 5. When you start the
            pipeline, <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-createsthreads"
            /> The threads are assigned to different partitions based on the Kafka partition
            assignment strategy. <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-Passesbatch"
            /></p>
        <p conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/HTTPServer-process-p"/>
        <p>For more information about multithreaded pipelines, see <xref
                href="../Multithreaded_Pipelines/MultithreadedPipelines_Overview.dita#concept_zpp_2xc_py"
            />. For more information about the Kafka partition assignment strategies, see the <xref
                href="https://kafka.apache.org/documentation/" format="html" scope="external">Kafka
                documentation</xref>.</p>
 </conbody>
</concept>
