<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_zp3_wnw_4y">
 <title>JDBC Multitable Consumer</title>
 <conbody>
  <p><indexterm>origins<indexterm>JDBC Multitable Consumer</indexterm></indexterm><indexterm>JDBC
                Multitable Consumer
                origin<indexterm>overview</indexterm></indexterm><indexterm>multithreaded
                    origins<indexterm>JDBC Multitable Consumer</indexterm></indexterm>The JDBC
            Multitable Consumer origin reads database data from multiple tables through a JDBC
            connection. The origin returns data as a map with column names and field values. </p>
        <p>By default, the origin processes tables incrementally, using primary key columns or
            user-defined offset columns to track its progress. You can configure the origin to
            perform non-incremental processing to enable it to also process tables that do not have
            a key or offset column.</p>
        <p>The origin can use multiple threads to enable parallel processing of tables and
            partitions. Use the JDBC Multitable Consumer origin to read multiple tables in the same
            database. For example, you might use the origin to perform database replication. </p>
        <p>When you configure the JDBC Multitable Consumer origin, you define groups of database
            tables to read. The origin generates SQL queries based on the table configurations that
            you define. </p>
        <note>To configure your own SQL query to read database data from a single table or from a
            join of tables, use the <xref href="JDBCConsumer.dita#concept_qhf_hjr_bs"/>
            origin.</note>
        <p>When you configure the origin, you specify connection information and custom JDBC
            configuration properties to determine how the origin connects to the database. You also
            configure the number of threads to use and the maximum number of queries to run per
            second.</p>
        <p>When you define the table configuration for the groups of tables that you want to
            process, you can optionally override the default key column and specify the initial
            offset to use. You can enable non-incremental processing for tables without key or
            offset columns. You can configure the origin to perform multithreaded partition
            processing, multithreaded table processing, or use the default - a mix of both. When
            configuring partitions, you can configure the offset size, number of active partitions,
            and offset conditions. </p>
        <p>You define the strategy that the origin uses to create each batch of data and the number
            of batches to create from each result set. You can configure advanced properties, such
            as the initial order to read from tables, connection related properties, and transaction
            isolation. <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-unsupportedType"
            /></p>
        <p>When the pipeline stops, JDBC Multitable Consumer notes where it stops reading. When the
            pipeline starts again, JDBC Multitable Consumer continues processing from where it
            stopped by default. You can reset the origin to process all available data, using any
            initial offsets that you defined.</p>
        <p><ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-JDBC-legacyInfo"
            /></p>
        <p
            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/O-EventHandling-overview"/>
 </conbody>
</concept>
