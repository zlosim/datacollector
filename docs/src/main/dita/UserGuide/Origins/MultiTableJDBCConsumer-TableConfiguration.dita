<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_rx3_3hx_4y">
 <title>Table Configuration</title>
 <conbody>
        <p><indexterm>JDBC Multitable Consumer origin<indexterm>table
                configuration</indexterm></indexterm><indexterm>table configuration<indexterm>JDBC
                    Multitable Consumer origin</indexterm></indexterm>When you configure JDBC
            Multitable Consumer, you define a table configuration for each group of tables that you
            want to read. A table configuration defines a group of tables from the same schema, that
            have the same table name pattern, and that have proper primary keys or have the same
            user-defined offset columns.</p>
        <p>You can define one or more table configurations. </p>
        <p>For example, you can define one table configuration to replicate a database that has a
            proper primary key for each table. You simply define the schema name and use the default
            table name pattern <codeph>%</codeph> which matches all tables in the schema.</p>
        <p>Let's look at an example where you need to define more than one table configuration.
            Let's say that you want to copy tables in a relational database to an HBase cluster. The
            SALES schema contains ten tables, but you want to copy only the following four
                tables:<ul id="ul_ivp_hcy_4y">
                <li>store_a</li>
                <li>store_b</li>
                <li>store_c</li>
                <li>customers</li>
            </ul></p>
        <p>The three store tables use orderID as the primary key. You want to override the primary
            key for the customers table, and so need to define customerID as the offset column for
            that table. You want to read all available data in the tables, so do not need to define
            an initial offset value.</p>
        <p>You define the following two table configurations for the origin so that the origin can
            read all four tables:</p>
        <p><image href="../Graphics/MultiTableJDBC_TableConfig.png" id="image_vck_yjl_pbb"
                scale="70"/></p>
        <p>Let's take a closer look at the table name pattern and offset properties that you define
            in a table configuration.</p>
 </conbody>
</concept>
