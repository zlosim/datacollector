<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_gvy_yws_p1b">
    <title>Multithreaded Partition Processing</title>
    <conbody>
        <p><indexterm>JDBC Multitable Consumer origin<indexterm>multithreaded processing for
                    partitions</indexterm></indexterm>By default, the JDBC Multitable Consumer
            origin performs multithreaded partition processing for all tables that meet the
            partition processing requirements, and performs table processing for all other tables. </p>
        <p>To perform multithreaded processing of partitions within a table, you enable partition
            processing in the table configuration, then specify the partition size and the maximum
            number of partitions to use. Limiting the number of partitions also limits the number of
            threads that can be dedicated to processing data in the table. </p>
        <p>When you configure a set of tables for unlimited partitions, the origin creates up to
            twice as many partitions as the pipeline thread count. For example, if you have 5
            threads, the table can have up to 10 partitions. </p>
        <p>Similar to multithreaded table processing, each thread reads data from a single
            partition, and each partition can have a maximum of one thread read from it at a time. </p>
        <p>When processing partitions, the processing order depends on many factors. For a full
            description, see <xref
                href="MultiTableJDBCConsumer-ProcessingQueue.dita#concept_czt_ql2_r1b"/>.</p>
    </conbody>
</concept>
