<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2017 StreamSets Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_cl3_4w4_gbb">
 <title>Read REST Response Data from Data Collector</title>
 <conbody>
        <p>You can use the WebSocket Client origin to read <xref
                href="../Administration/RESTResponse.dita#concept_dlh_p15_2r" product="SDC">REST
                response</xref><ph product="DPM">REST response</ph> JSON data generated by <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>.
                <ph product="DPM">For more information about REST response JSON data, see <xref
                    href="https://streamsets.com/documentation/datacollector/latest/help/#Administration/Administration_title.html%23concept_dlh_p15_2r"
                    format="html" scope="external">Rest Response</xref> in the <ph
                    conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                />documentation.</ph></p>
        <p><ph conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/> can
            serve as a WebSocket server endpoint, as a WebSocket server is simply a TCP application
            listening on any port of a server that follows a specific protocol. </p>
  <p>For example, let's say that your <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            runs twenty pipelines and you want to receive an email when any <xref
                href="../Pipeline_Maintenance/PipelineStates-Understanding.dita#concept_s4p_ns5_nz"
                >pipeline state</xref> changes to Run_Error. Instead of configuring email
            notifications for all twenty pipelines, you'd like to configure a single global email
            notification for all of the running pipelines.</p>
        <p>You can design a pipeline that uses a WebSocket Client origin to read the pipeline state
            from the REST response data generated by <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>.
            You connect the origin to the Email executor to send an email each time a pipeline state
            changes to Run_Error. <note type="important">The WebSocket Client origin does not
                generate events. Usually you only use an executor after an event generating stage
                because running an executor for every pipeline record is an unusual case and can
                slow performance. However, in this case, the sole purpose of our pipeline is to send
                an email only when another pipeline changes to a specific state - which we don't
                expect to happen often. </note></p>
        <p>Design the pipeline as follows:<ol>
                <li>Add a WebSocket Client origin and configure the origin to read from the
                    following resource
                    URL:<codeblock>ws://&lt;Data Collector host>:&lt;Data Collector port>/rest/v1/webSocket?type=status</codeblock></li>
                <li>Configure the origin to use basic authentication, and then enter a valid <ph
                        conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                    /> username and password on the <uicontrol>Credentials</uicontrol> tab.</li>
                <li>On the <uicontrol>Data Format</uicontrol> tab, configure the origin to process
                    the JSON data format.</li>
                <li>Add an Email executor to the canvas and connect it to the origin.</li>
                <li>On the <uicontrol>Email</uicontrol> tab of the executor, enter the following
                    condition so that the executor sends an email only when a pipeline state changes
                    to
                    Run_Error:<codeblock>${record:value('/status') == 'RUN_ERROR'}</codeblock></li>
                <li>Configure the email IDs, subject, and body for the executor.<p>For more details
                        about configuring the executor, see <xref
                            href="../Executors/Email.dita#concept_sjs_sfp_qz">Email Executor</xref>.
                        Before you run a pipeline that includes the Email executor, you must enable
                            <ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                        /> to <xref href="../Configuration/SendingEmail.dita#concept_it1_wwg_xz"
                            >send email</xref>.</p></li>
            </ol></p>
        <p>The configured pipeline looks like this:</p>
        <p><image href="../Graphics/WebSocketClientRESTResponse.png" scale="60"
                id="image_am1_f1q_gbb"/></p>
 </conbody>
</concept>
