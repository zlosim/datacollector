<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_sfp_1nd_py">
 <title>Multithreaded Pipeline Summary</title>
 <conbody>
        <p><indexterm>multithreaded pipeline<indexterm>summary</indexterm></indexterm>The following
            points attempt to summarize the key details about multithreaded pipelines: </p>
  <p>
            <ul id="ul_igl_q4d_py">
                <li>Use multithreaded origins to create a multithreaded pipeline. You can use the
                    following origins at this time:<ul
                        conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/Multithread-OriginsList"
                        id="ul_llv_cwk_tz">
                        <li/>
                    </ul></li>
                <li>Unlike a basic, single-threaded pipeline, a multithreaded pipeline cannot
                    guarantee the order of data. <p>Data within a batch is processed in order, but
                        since batches are created quickly and passed to different threads, the order
                        of batches can change as they are written to pipeline destinations.
                    </p></li>
                <li>Processors that cache information generally have a separate cache for each
                    instance of the pipeline. The exception is the Record Deduplicator, which can
                    identify duplicate records across all pipeline runners. </li>
                <li product="SDC">The pipeline and stage statistics that display during monitoring
                    are aggregated across all threads. </li>
                <li>To optimize performance and resource usage, check the Available Pipeline Runners
                    histogram to see if pipeline runners are being used effectively.</li>
                <li>We recommend monitoring the resource usage of the pipeline and the <ph
                        conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                    /> heap usage, increasing them as needed.</li>
            </ul>
        </p>
 </conbody>
</concept>
