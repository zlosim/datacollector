<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_lhz_pyp_1r">
 <title>Functions</title>
 <conbody>
  <p><indexterm>expression
     language<indexterm>functions</indexterm></indexterm><indexterm>functions<indexterm>in the
     expression language</indexterm></indexterm>The following table lists all available functions.
   For details about each function, see the related function type:</p>
  <p>
   <table frame="all" rowsep="1" colsep="1" id="table_ocf_112_gs">
    <tgroup cols="2">
     <colspec colname="c1" colnum="1" colwidth="1*"/>
     <colspec colname="c2" colnum="2" colwidth="2.2*"/>
     <thead>
      <row>
       <entry>Function Type</entry>
       <entry>Functions</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><xref href="RecordFunctions.dita#concept_p1z_ggv_1r">Record functions</xref></entry>
       <entry>
        <p>
         <ul id="ul_gdz_wb2_gs">
          <li>record:attribute(&lt;attribute name>) </li>
          <li>record:attributeOrDefault(&lt;attribute name>, &lt;default value>)</li>
          <li>record:creator()</li>
          <li>record:eventCreation()</li>
          <li>record:eventType()</li>
          <li>record:eventVersion()</li>
          <li>record:exists(&lt;field path>)</li>
          <li>record:fieldAttribute(&lt;field path>, &lt;field attribute name>)</li>
          <li>record:fieldAttributeOrDefault(&lt;field path>, &lt;field attribute name>, &lt;default
           value>)</li>
          <li>record:id()</li>
          <li>record:path()</li>
          <li>record:type(&lt;field path>)</li>
          <li>record:value(&lt;field path>)</li>
          <li>record:valueOrDefault(&lt;field path>, &lt;default value>)</li>
         </ul>
        </p>
       </entry>
      </row>
      <row>
       <entry><xref href="RecordFunc-Delimited.dita#concept_s2c_q14_fs">Delimited data record
         functions</xref></entry>
       <entry>
        <ul id="ul_z2x_jc2_gs">
         <li>record:dExists(&lt;header>) </li>
         <li>record:dHasDupHeader() </li>
         <li>record:dIndex(&lt;header>)</li>
         <li>record:dIsDupHeader(&lt;header>)</li>
         <li>record:dToMap()</li>
         <li>record:dValue(&lt;header>)</li>
         <li>record:dValueAt(&lt;header index>)</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="ErrorFunctions.dita#concept_ndj_43v_1r">Error record
        functions</xref></entry>
       <entry>
        <ul id="ul_n1v_z12_gs">
         <li>record:errorCode()</li>
         <li>record:errorCollectorId()</li>
         <li>record:errorMessage()</li>
         <li>record:errorPipeline()</li>
         <li>record:errorStage()</li>
         <li>record:errorStageLabel()</li>
         <li>record:errorTime()</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="Base64Functions.dita#concept_ylk_v44_jw">Base64 functions</xref></entry>
       <entry>
        <ul id="ul_ecm_y1d_kw">
         <li>base64:decodeBytes(&lt;string>)</li>
         <li>base64:decodeString(&lt;string>, &lt;charset>)</li>
         <li>base64:encodeBytes(&lt;byte array>, &lt;urlSafe: true | false>)</li>
         <li>base64:encodeString(&lt;string>, &lt;urlSafe: true | false>, &lt;charset>)</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="CredentialFunctions.dita#concept_yvc_3qs_r1b">Credential
        functions</xref></entry>
       <entry>
        <ul id="ul_gyz_xps_r1b">
         <li>credential:get(&lt;storeID>, &lt;group>, &lt;credential name>)</li>
         <li>credential:getWithOptions(&lt;storeID>, &lt;group>, &lt;credential name>,
          &lt;options>)</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="DataDriftFunctions.dita">Data drift functions</xref></entry>
       <entry>
        <ul id="ul_wsq_kfk_p5">
         <li>drift:names(&lt;field path>, &lt;ignoreWhenMissing: true | false>)</li>
         <li>drift:order(&lt;field path>, &lt;ignoreWhenMissing: true | false>)</li>
         <li>drift:size(&lt;field path>, &lt;ignoreWhenMissing: true | false>)</li>
         <li>drift:type(&lt;field path>, &lt;ignoreWhenMissing: true | false>)</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="FileFunctions.dita#concept_kxj_nyl_5x">File functions</xref></entry>
       <entry>
        <ul id="ul_mmh_mqr_5x">
         <li>file:fileExtension(&lt;filepath>)</li>
         <li>file:fileName(&lt;filepath>)</li>
         <li>file:parentPath(&lt;filepath>)</li>
         <li>
          <p>file:pathElement(&lt;filepath>, &lt;integer>) </p>
         </li>
         <li>file:removeExtension(&lt;filepath>)</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="MathFunctions.dita#concept_m2m_s1f_lw">Math functions</xref></entry>
       <entry>
        <ul id="ul_ntg_zhf_lw">
         <li>math:abs(&lt;number>)</li>
         <li>math:ceil(&lt;number>)</li>
         <li>math:floor (&lt;number>)</li>
         <li>math:max(&lt;number1>, &lt;number2>)</li>
         <li>math:min(&lt;number1>, &lt;number2>)</li>
         <li>math:round(&lt;number>)</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="PipelineFunctions.dita#concept_dvg_nqn_wx">Pipeline functions</xref>
       </entry>
       <entry>
        <ul id="ul_nmc_qpn_wx">
         <li>pipeline:id()</li>
         <li>pipeline:name()</li>
         <li>pipeline:title()</li>
         <li>pipeline:user()</li>
         <li>pipeline:version()</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="StringFunctions.dita#concept_ahp_f4v_1r">String functions</xref></entry>
       <entry>
        <p>
         <ul id="ul_f15_xf2_gs">
          <li>str:concat(&lt;string1>, &lt;string2>)</li>
          <li>str:contains(&lt;string>, &lt;subset>) </li>
          <li>str:endsWith(&lt;string>, &lt;subset>)</li>
          <li>str:escapeXML10(&lt;string>)</li>
          <li>str:escapeXML11(&lt;string>)</li>
          <li>str:indexOf(&lt;string>, &lt;subset>)</li>
          <li>str:isNullOrEmpty(&lt;string>)</li>
          <li>str:length(&lt;string>)</li>
          <li>str:matches(&lt;string>, &lt;regEx>)</li>
          <li>str:regexCapture(&lt;string>, &lt;regEx>, &lt;group>)</li>
          <li>str:replace(&lt;string>, &lt;oldChar>, &lt;newChar>)</li>
          <li>str:replaceAll(&lt;string>, &lt;regEx>, &lt;newString>)</li>
          <li>str:splitKV(&lt;string>, &lt;pairSeparator>, &lt;keyValueSeparator>)</li>
          <li>str:startsWith(&lt;string>, &lt;subset>)</li>
          <li>str:substring(&lt;string>, &lt;beginIndex>, &lt;endIndex>)</li>
          <li>str:toLower(&lt;string>)</li>
          <li>str:toUpper(&lt;string>)</li>
          <li>str:trim(&lt;string>)</li>
          <li>str:truncate(&lt;string>, &lt;length>)</li>
          <li>str:unescapeJava(&lt;string>)</li>
          <li>str:unescapeXML(&lt;string>)</li>
          <li>str:urlDecode(&lt;URL>, &lt;charset>)</li>
          <li>str:urlEncode(&lt;infoforURL>, &lt;charset>)</li>
         </ul>
        </p>
       </entry>
      </row>
      <row>
       <entry><xref href="TimeFunctions.dita#concept_qkr_trf_sw">Time functions</xref></entry>
       <entry>
        <ul id="ul_vrl_4rf_sw">
         <li>time:createDateFromStringTZ(&lt;string>, &lt;time zone>, &lt;date format>)</li>
         <li>time:extractDateFromString(&lt;string>, &lt;format string>)</li>
         <li>time:extractLongFromDate(&lt;Date object>, &lt;format string>)</li>
         <li>time:extractStringFromDate(&lt;Date object>, &lt;format string>)</li>
         <li>time:extractStringFromDateTZ(&lt;Date object>, &lt;time zone>, &lt;format string>)</li>
         <li>time:millisecondsToDateTime(&lt;long>)</li>
         <li>time:now()</li>
         <li>time:trimDate(&lt;datetime>)</li>
         <li>time:trimTime(&lt;datetime>)</li>
        </ul>
       </entry>
      </row>
      <row>
       <entry><xref href="MiscFunctions.dita#concept_ddw_ld1_1s">Miscellaneous
        functions</xref></entry>
       <entry>
        <ul id="ul_xks_xg2_gs">
         <li>alert:info()</li>
         <li>emptyList()</li>
         <li>emptyMap()</li>
         <li>every(&lt;interval>, &lt;mm() | ss()>)</li>
         <li>field:field()</li>
         <li>jvm:maxMemoryMB()</li>
         <li>list:join(&lt;list field>, &lt;separator>)</li>
         <li>list:joinSkipNulls(&lt;list field>, &lt;separator>)</li>
         <li>offset:column(&lt;position>)</li>
         <li>runtime:availableProcessors()</li>
         <li>runtime:conf(&lt;runtime property>)</li>
         <li>runtime:loadResource(&lt;file name>, &lt;restricted: true | false>)</li>
         <li>sdc:hostname()</li>
         <li>sdc:id()</li>
         <li>uuid:uuid()</li>
         <li>vault:read(&lt;path>, &lt;key>) <i>- Deprecated</i></li>
         <li>vault:readWithDelay(&lt;path>, &lt;key>, &lt;delay>) <i>- Deprecated</i></li>
        </ul>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </p>
 </conbody>
</concept>
