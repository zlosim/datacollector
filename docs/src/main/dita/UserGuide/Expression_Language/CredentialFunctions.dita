<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2017 StreamSets Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_yvc_3qs_r1b">
    <title>Credential Functions</title>
    <conbody>
        <p><indexterm>functions<indexterm>credential
                functions</indexterm></indexterm><indexterm>credential
                    functions<indexterm>description</indexterm></indexterm>Use a credential function
            to retrieve a credential value from the following credential store systems: <ul
                id="ul_zgx_cxt_51b">
                <li>CyberArk</li>
                <li>Java keystore</li>
                <li>Vault</li>
            </ul></p>
        <p>Before you use a credential function, you must configure the CyberArk, Java keystore, or
            Vault <ph product="SDC"><xref
                    href="../Configuration/CredentialStores.dita#concept_bt1_bpj_r1b">credential
                    stores</xref></ph><ph product="DPM">credential stores. For more information
                about credential stores, see <xref
                    href="https://streamsets.com/documentation/datacollector/latest/help/#Configuration/CredentialStores.html"
                    format="html" scope="external">Credential Stores</xref> in the Data Collector
                documentation.</ph>.</p>
       
        <p>String literals must be enclosed in single or double quotation marks.</p>
        <note
            conref="../Reusable_Content/Reusable_Topics/CredentialStores_Reusable.dita#concept_jjh_crs_r1b/note_onlyFunc"/>
        <p>The expression language provides the following credential functions:</p>
        <dl>
            <dlentry>
                <dt>credential:get(&lt;storeID>, &lt;group>, &lt;credential name>)</dt>
                <dd>Returns the credential value from the credential store. Uses the following
                        arguments:<ul id="ul_eqz_nxt_51b">
                        <li>storeId - Unique ID of the credential store to use. Enter "cyberark" to
                            access the CyberArk credential store, "jks" to access the Java keystore
                            credential store, or "vault" to access the Vault credential store.</li>
                        <li
                            conref="../Reusable_Content/Reusable_Topics/CredentialStores_Reusable.dita#concept_jjh_crs_r1b/li_group_argument"/>
                        <li>credential name - Name of the credential value to retrieve from the
                            credential store. Use the required format for the credential store:<ul
                                id="ul_jw3_gyt_51b">
                                <li>CyberArk - Enter the credential name using the following format:
                                        <codeph>"&lt;safe>&lt;separator>&lt;folder>&lt;separator>&lt;object
                                        name>&lt;separator>&lt;element name>"</codeph>. <p>Where
                                            <codeph>&lt;safe></codeph> is the CyberArk safe to read,
                                            <codeph>&lt;separator></codeph> is the separator defined
                                        in the
                                            <codeph>$SDC_CONF/credential-stores.properties</codeph>
                                        file, <codeph>&lt;folder></codeph> is the CyberArk folder to
                                        read, <codeph>&lt;object name></codeph> is the CyberArk
                                        object to read, and <codeph>&lt;element name></codeph> is
                                        the name for the value that you want returned.</p></li>
                                <li>Java keystore - Enter the credential name added to the Java
                                    keystore file using the <codeph>jks-cs add</codeph>
                                    command.</li>
                                <li>Vault - Enter the credential name using the following format:
                                        <codeph>"&lt;path>&lt;separator>&lt;key>"</codeph>. 
                                    <p>Where
                                        <codeph>&lt;path></codeph> is the path in Vault to read,
                                        <codeph>&lt;separator></codeph> is the separator defined in
                                    the <codeph>$SDC_CONF/credential-stores.properties</codeph>
                                    file, and <codeph>&lt;key></codeph> is the key for the value
                                        that you want returned.</p></li>
                            </ul></li>
                    </ul></dd>
                <dd>Return type: String.</dd>
                <dd>For example, the following expression returns the value of the OracleDBPassword
                    credential defined in the Java keystore credential store and allows any user
                    belonging to the devops group access to the credential when validating,
                    previewing, or running the
                    pipeline:<codeblock>${credential:get("jks", "devops", "OracleDBPassword")}</codeblock></dd>
            </dlentry>
            <dlentry>
                <dt>credential:getWithOptions(&lt;storeID>, &lt;group>, &lt;credential name>,
                    &lt;options>)</dt>
                <dd>Returns the credential value from the credential store using additional options
                    to communicate with the credential store. Not applicable for the Java keystore
                    credential store.</dd>
                <dd>For example, use this function with the CyberArk credential store to define the
                    separator for the credential name within the function. Or use this function with
                    the Vault credential store when you might need a delay of 10 seconds or more
                    before the credentials can be used successfully. </dd>
                <dd>Uses the following arguments:<ul id="ul_dwm_vyt_51b">
                        <li>storeId - Unique ID of the credential store to use. Enter "cyberark" to
                            access the CyberArk credential store or "vault" to access the Vault
                            credential store.</li>
                        <li
                            conref="../Reusable_Content/Reusable_Topics/CredentialStores_Reusable.dita#concept_jjh_crs_r1b/li_group_argument"/>
                        <li>credential name - Name of the credential value to retrieve from the
                            credential store. Use the required format for the credential store:<ul
                                id="ul_v3d_5qj_fbb">
                                <li>CyberArk - Enter the credential name using the following format:
                                        <codeph>"&lt;safe>&lt;separator>&lt;folder>&lt;separator>&lt;object
                                        name>&lt;separator>&lt;element name>"</codeph>. 
                                    <p>Where
                                        <codeph>&lt;safe></codeph> is the CyberArk safe to read,
                                        <codeph>&lt;separator></codeph> is the separator defined in
                                    the <codeph>$SDC_CONF/credential-stores.properties</codeph>
                                    file, <codeph>&lt;folder></codeph> is the CyberArk folder to
                                    read, <codeph>&lt;object name></codeph> is the CyberArk object
                                    to read, and <codeph>&lt;element name></codeph> is the name for
                                        the value that you want returned.</p></li>
                                <li>Vault - Enter the credential name using the following format:
                                        <codeph>"&lt;path>&lt;separator>&lt;key>"</codeph>. 
                                    <p>Where
                                        <codeph>&lt;path></codeph> is the path in Vault to read,
                                        <codeph>&lt;separator></codeph> is the separator defined in
                                    the <codeph>$SDC_CONF/credential-stores.properties</codeph>
                                    file, and <codeph>&lt;key></codeph> is the key for the value
                                        that you want returned.</p></li>
                            </ul></li>
                        <li>options - Additional options to communicate with the credential store.
                            For Vault, you can use the <codeph>delay</codeph> option to enter a
                            delay in milliseconds to allow time for external processing. Use the
                            delay option when using the Vault AWS secret backend to generate AWS
                            access credentials based on IAM policies. According to Vault
                            documentation, you might need a delay of 10 seconds or more before the
                            credentials can be used successfully. <p>For CyberArk, you can use the
                                following options:</p><ul id="ul_kb1_c4c_hbb">
                                <li><codeph>separator</codeph> - Separator to use for the credential
                                    name.</li>
                                <li><codeph>ConnectionTimeout</codeph> - Connection timeout
                                    value.</li>
                                <li><codeph>FailRequestOnPasswordChange</codeph> - Whether to fail
                                    the request on a password change, set to true or false.</li>
                            </ul><p>Use the following format to specify
                                options:<codeblock>"&lt;option1>=&lt;value>,&lt;option2>=&lt;value>"</codeblock>For
                                example, to use the pipe symbol (|) as the CyberArk separator, enter
                                the following for the options argument:
                                <codeblock>"separator=|"</codeblock></p><p>Or to set the Vault delay
                                to 1,000 milliseconds, enter the following for the options
                                argument:<codeblock>"delay=1000"</codeblock></p></li>
                    </ul></dd>
                <dd>Return type: String.</dd>
                <dd><p
                        conref="../Reusable_Content/Reusable_Topics/CredentialStores_Reusable.dita#concept_jjh_crs_r1b/vault_credential_get_example"/></dd>
            </dlentry>
        </dl>
    </conbody>
</concept>
