<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_njg_4mx_4y">
    <title>Single and Multithreaded Pipelines</title>
    <conbody>
        <p><indexterm>pipelines<indexterm>single and multithreaded</indexterm></indexterm>The
            information above describes a standard single-threaded pipeline - the origin creates a
            batch and passes it through the pipeline, creating a new batch only after processing the
            previous batch.</p>
        <p>Some origins can generate multiple threads to enable parallel processing in
                <term>multithreaded pipelines</term>. In a multithreaded pipeline, you configure the
            origin to create the number of threads or amount of concurrency that you want to use.
                <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-MultiThread-def1"
            /></p>
        <p><ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-MultiThread-def2"
            /></p>
        <p>All general references to pipelines in this guide describe single-threaded pipelines, but
            this information generally applies to multithreaded pipelines. For more details specific
            to multithreaded pipelines, see <xref
                href="../Multithreaded_Pipelines/MultithreadedPipelines_Overview.dita#concept_zpp_2xc_py"
            />.</p>
        <draft-comment author="Loretta">Hiding this until we have an origin that stores an offset:
                <p>For origins that store an offset, the multithreaded pipeline stores an offset for
                each thread.</p></draft-comment>
    </conbody>
</concept>
