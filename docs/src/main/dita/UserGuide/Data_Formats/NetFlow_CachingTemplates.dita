<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ivr_j1l_3bb">
 <title>Caching NetFlow 9 Templates</title>
 <conbody>
  <p><indexterm>NetFlow 9<indexterm>configuring template cache
            limitations</indexterm></indexterm>Processing NetFlow 9 data requires caching the
            templates used to process the messages. When you configure NetFlow 9 properties, you can
            specify the maximum number of templates to cache and how long to allow an unused
            template to remain in the cache. You can also configure the stage to allow an unlimited
            number of templates in the cache for an unlimited amount of time.</p>
        <p>When you configure caching limitations, templates can be ejected from the cache under the
            following conditions:<ul id="ul_avd_4bt_kbb">
                <li>When the cache is full and a new template appears. </li>
                <li>When a template exceeds the specified idle period. </li>
            </ul></p>
        <p>Configure NetFlow 9 caching properties to allow the stage to retain templates for
            processing in a logical way. When a record requires the use of a template that is not in
            the cache, the record is passed to the stage for error handling.</p>
        <p>For example, say you use the UDP Source origin to process NetFlow 9 data from five
            servers. Each server sends data using a different template, so to process data from
            these five servers, you can set the cache size to five templates. But to allow for
            additional servers that might be added later, you might set the template cache to a
            higher number. </p>
        <p>Most servers resend templates periodically, so you might take this refresh interval into
            account when you configure the cache timeout. </p>
        <p>For example, say your server resends templates every three minutes. If you set the cache
            timeout for two minutes, then a template that hasn't been used in two minutes gets
            evicted. If the server sends a packet that requires the evicted template, the stage
            generates an error record because the template is not available. If you set the cache
            timeout for four minutes and an unlimited cache size, then the templates from all
            servers remain in the cache until replaced by a new version of the template.</p>
        <p>
            <note><ph
                    conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                /> keeps the cached templates in memory. If you need to cache large numbers of
                templates, you might want to increase the <ph><xref
                        href="../Configuration/JavaHeapSize.dita#concept_mdc_shg_qr" product="SDC"
                            ><ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                        /> heap size accordingly.</xref></ph><ph product="DPM">Data Collector heap
                    size accordingly. For more information, see <xref
                        href="https://streamsets.com/documentation/datacollector/latest/help/#Configuration/DCEnvironmentConfig.html%23concept_mdc_shg_qr"
                        format="html" scope="external">Java Heap Size</xref> in the Data Collector
                    documentation.</ph>
            </note>
        </p>
 </conbody>
</concept>
